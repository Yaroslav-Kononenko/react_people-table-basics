{"version":3,"sources":["components/Header/Header.tsx","pages/HomePage/HomePage.tsx","api/api.tsx","components/PersonRow/PersonRow.tsx","components/PeopleTable/PeopleTable.tsx","pages/PeoplePage/PeoplePage.tsx","pages/NotFoundPage/NotFoundPage.tsx","App.tsx","index.tsx"],"names":["Header","React","memo","className","to","isActive","classNames","link_isActive","HomePage","URL","a","fetch","promis","json","result","PersonRow","person","name","sex","born","died","motherName","fatherName","slug","PeopleTable","people","map","PeoplePage","useState","setPeople","useEffect","getPeople","then","response","peopleFor","father","find","mother","NotFoundPage","App","path","element","replace","ReactDOM","render","document","getElementById"],"mappings":"qTAKaA,EAAkBC,IAAMC,MAAK,WACxC,OACE,iCACE,8BACE,qBAAIC,UAAU,UAAd,UACE,6BACE,cAAC,IAAD,CACEC,GAAG,IACHD,UAEE,gBAAGE,EAAH,EAAGA,SAAH,OAAkBC,IAAW,CAAEC,cAAeF,GAAY,SAJ9D,oBAUF,6BACE,cAAC,IAAD,CACED,GAAG,SACHD,UAEE,gBAAGE,EAAH,EAAGA,SAAH,OAAkBC,IAAW,CAAEC,cAAeF,GAAY,SAJ9D,gCCpBCG,EAAoBP,IAAMC,MAAK,WAC1C,OACE,qBAAKC,UAAU,OAAf,SACE,oBAAIA,UAAU,QAAd,4B,uCCLAM,EAAM,oE,4CAEL,8BAAAC,EAAA,sEAEgBC,MAAMF,GAFtB,cAECG,EAFD,gBAIgBA,EAAOC,OAJvB,cAICC,EAJD,yBAMEA,GANF,4C,gCCMMC,EAA4Bd,IAAMC,MAAK,YAAiB,IAAdc,EAAa,EAAbA,OACrD,OACE,+BACE,6BAAKA,EAAOC,OACZ,6BAAKD,EAAOE,MACZ,6BAAKF,EAAOG,OACZ,6BAAKH,EAAOI,OACZ,6BAAKJ,EAAOK,aACZ,6BAAKL,EAAOM,eANLN,EAAOO,SCFPC,EAA8BvB,IAAMC,MAAK,YAAiB,IAAduB,EAAa,EAAbA,OACvD,OACE,mCACE,wBAAOtB,UAAU,QAAjB,UACE,gCACE,+BACE,sCACA,qCACA,sCACA,sCACA,wCACA,6CAGJ,gCACGsB,EAAOC,KAAI,SAAAV,GAAM,OAChB,cAACD,EAAD,CAAWC,OAAQA,iBCnBlBW,EAAsB1B,IAAMC,MAAK,WAC5C,MAA4B0B,mBAAmB,IAA/C,mBAAOH,EAAP,KAAeI,EAAf,KAiBA,OALAC,qBAAU,YHhBL,WAAP,gCGiBIC,GACGC,MAAK,SAAAC,GAAQ,OAAIJ,GAZCK,EAYuBD,GAX3BP,KAAI,SAAAV,GACnB,OAAO,2BACFA,GADL,IAEEmB,OAAQD,EAAUE,MAAK,SAAAD,GAAM,OAAIA,EAAOlB,OAASD,EAAOM,cACxDe,OAAQH,EAAUE,MAAK,SAAAC,GAAM,OAAIA,EAAOpB,OAASD,EAAOK,oBALxC,IAACa,OAapB,IAGD,sBAAK/B,UAAU,OAAf,UACE,oBAAIA,UAAU,QAAd,yBAGA,cAAC,EAAD,CAAasB,OAAQA,UC1Bda,EAAwBrC,IAAMC,MAAK,WAC9C,OACE,qBAAKC,UAAU,OAAf,SACE,qDCIAoC,EAAM,WACV,OACE,sBAAKpC,UAAU,MAAf,UACE,cAAC,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOqC,KAAK,IAAIC,QAAS,cAACjC,EAAD,MACzB,cAAC,IAAD,CAAOgC,KAAK,SAASC,QAAS,cAACd,EAAD,MAC9B,cAAC,IAAD,CAAOa,KAAK,QAAQC,QAAS,cAAC,IAAD,CAAUC,SAAO,EAACtC,GAAG,QAClD,cAAC,IAAD,CAAOoC,KAAK,IAAIC,QAAS,cAACH,EAAD,aAMlBrC,MAAMC,KAAKqC,GClB1BI,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.cde40cc2.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport classNames from 'classnames';\nimport './Header.scss';\n\nexport const Header:React.FC = React.memo(() => {\n  return (\n    <header>\n      <nav>\n        <ul className=\"navLink\">\n          <li>\n            <NavLink\n              to=\"/\"\n              className={\n                // eslint-disable-next-line max-len\n                ({ isActive }) => classNames({ link_isActive: isActive }, 'link')\n              }\n            >\n              Home\n            </NavLink>\n          </li>\n          <li>\n            <NavLink\n              to=\"people\"\n              className={\n                // eslint-disable-next-line max-len\n                ({ isActive }) => classNames({ link_isActive: isActive }, 'link')\n              }\n            >\n              People\n            </NavLink>\n          </li>\n        </ul>\n      </nav>\n    </header>\n  );\n});\n","import React from 'react';\n\nexport const HomePage:React.FC = React.memo(() => {\n  return (\n    <div className=\"Page\">\n      <h1 className=\"title\">\n        Home Page\n      </h1>\n    </div>\n  );\n});\n","const URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nexport async function getPeople() {\n  // eslint-disable-next-line max-len\n  const promis = await fetch(URL);\n\n  const result = await promis.json();\n\n  return result;\n}\n","import React from 'react';\n\nimport { Person } from '../../react-app-env';\n\ninterface Props {\n  person: Person,\n}\n\nexport const PersonRow:React.FC<Props> = React.memo(({ person }) => {\n  return (\n    <tr key={person.slug}>\n      <th>{person.name}</th>\n      <td>{person.sex}</td>\n      <td>{person.born}</td>\n      <td>{person.died}</td>\n      <td>{person.motherName}</td>\n      <td>{person.fatherName}</td>\n    </tr>\n  );\n});\n","import React from 'react';\nimport { Person } from '../../react-app-env';\nimport './PeopleTable.scss';\nimport { PersonRow } from '../PersonRow';\n\ninterface Props {\n  people: Person[],\n}\nexport const PeopleTable:React.FC<Props> = React.memo(({ people }) => {\n  return (\n    <>\n      <table className=\"table\">\n        <thead>\n          <tr>\n            <th>NAME</th>\n            <th>SEX</th>\n            <th>BORN</th>\n            <th>DIED</th>\n            <th>MOTHER</th>\n            <th>FATHER</th>\n          </tr>\n        </thead>\n        <tbody>\n          {people.map(person => (\n            <PersonRow person={person} />\n          ))}\n        </tbody>\n      </table>\n\n    </>\n  );\n});\n","import React, { useEffect, useState } from 'react';\nimport { getPeople } from '../../api/api';\nimport { PeopleTable } from '../../components/PeopleTable';\nimport { Person, PersonFromServer } from '../../react-app-env';\n\nexport const PeoplePage:React.FC = React.memo(() => {\n  const [people, setPeople] = useState<Person[]>([]);\n\n  const preparePeople = (peopleFor: PersonFromServer[]): Person[] => {\n    return peopleFor.map(person => {\n      return {\n        ...person,\n        father: peopleFor.find(father => father.name === person.fatherName),\n        mother: peopleFor.find(mother => mother.name === person.motherName),\n      };\n    });\n  };\n\n  useEffect(() => {\n    getPeople()\n      .then(response => setPeople(preparePeople(response)));\n  }, []);\n\n  return (\n    <div className=\"Page\">\n      <h1 className=\"title\">\n        People Page\n      </h1>\n      <PeopleTable people={people} />\n    </div>\n  );\n});\n","import React from 'react';\n\nexport const NotFoundPage:React.FC = React.memo(() => {\n  return (\n    <div className=\"Page\">\n      <h1>Page not found</h1>\n    </div>\n  );\n});\n","import './App.scss';\nimport React from 'react';\nimport 'bulma';\nimport { Navigate, Route, Routes } from 'react-router-dom';\nimport { Header } from './components/Header';\nimport { HomePage } from './pages/HomePage';\nimport { PeoplePage } from './pages/PeoplePage';\nimport { NotFoundPage } from './pages/NotFoundPage';\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Routes>\n        <Route path=\"/\" element={<HomePage />} />\n        <Route path=\"people\" element={<PeoplePage />} />\n        <Route path=\"/home\" element={<Navigate replace to=\"/\" />} />\n        <Route path=\"*\" element={<NotFoundPage />} />\n      </Routes>\n    </div>\n  );\n};\n\nexport default React.memo(App);\n","import ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}